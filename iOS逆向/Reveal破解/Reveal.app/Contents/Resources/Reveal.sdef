<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="Reveal Scripting Definitions" xmlns:xi="http://www.w3.org/2003/XInclude">

    <!-- The standard suite has lots of actions we don't support.  So instead of importing it
     directly here i've included it manually below and "trimmed" it a lot. Perhaps if/when 
     Reveal supports more standard document behaviours we can just include the standard suite.
     -->
    <!-- xi:include href="file:///System/Library/ScriptingDefinitions/CocoaStandard.sdef" xpointer="xpointer(/dictionary/suite)"/ -->
    <suite name="Standard Suite" code="????" description="Common classes and commands for all applications.">

        <command name="open" code="aevtodoc" description="Open a document.">
            <direct-parameter description="The file(s) to be opened.">
                <type type="file"/>
                <type type="file" list="yes"/>
            </direct-parameter>
            <result description="The opened document(s).">
                <type type="document"/>
                <type type="document" list="yes"/>
            </result>
        </command>

        <enumeration name="save options" code="savo">
            <enumerator name="yes" code="yes " description="Save the file."/>
            <enumerator name="no" code="no  " description="Do not save the file."/>
            <enumerator name="ask" code="ask " description="Ask the user whether or not to save the file."/>
        </enumeration>

        <command name="close" code="coreclos" description="Close a document.">
            <cocoa class="NSCloseCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="the document(s) or window(s) to close."/>
            <!-- parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before closing?">
                <cocoa key="SaveOptions"/>
            </parameter>
            <parameter name="saving in" code="kfil" type="file" optional="yes" description="The file in which to save the document, if so.">
                <cocoa key="File"/>
            </parameter -->
        </command>

        <command name="save" code="coresave" description="Save a document.">
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The document(s) or window(s) to save."/>
            <parameter name="in" code="kfil" type="file" optional="yes" description="The file in which to save the document.">
                <cocoa key="File"/>
            </parameter>
            <!-- parameter name="as" code="fltp" type="saveable file format" optional="yes" description="The file format to use.">
                <cocoa key="FileType"/>
            </parameter -->
        </command>

        <command name="quit" code="aevtquit" description="Quit the application.">
            <cocoa class="NSQuitCommand"/>
            <!-- parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before quitting?">
                <cocoa key="SaveOptions"/>
            </parameter -->
        </command>

        <command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
            <cocoa class="NSCountCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The objects to be counted."/>
            <parameter name="each" code="kocl" type="type" optional="yes" description="The class of objects to be counted." hidden="yes">
                <cocoa key="ObjectClass"/>
            </parameter>
            <result type="integer" description="The count."/>
        </command>

        <command name="delete" code="coredelo" description="Delete an object.">
            <cocoa class="NSDeleteCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" description="The object(s) to delete."/>
        </command>

        <command name="duplicate" code="coreclon" description="Copy an object.">
            <cocoa class="NSCloneCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The object(s) to copy."/>
            <parameter name="to" code="insh" type="location specifier" description="The location for the new copy or copies." optional="yes">
                <cocoa key="ToLocation"/>
            </parameter>
            <parameter name="with properties" code="prdt" type="record" description="Properties to set in the new copy or copies right away." optional="yes">
                <cocoa key="WithProperties"/>
            </parameter>
        </command>

        <command name="exists" code="coredoex" description="Verify that an object exists.">
            <cocoa class="NSExistsCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="any" requires-access="r" description="The object(s) to check."/>
            <result type="boolean" description="Did the object(s) exist?"/>
        </command>

        <command name="make" code="corecrel" description="Create a new object.">
            <cocoa class="NSCreateCommand"/>
            <access-group identifier="*"/>
            <parameter name="new" code="kocl" type="type" description="The class of the new object.">
                <cocoa key="ObjectClass"/>
            </parameter>
            <parameter name="at" code="insh" type="location specifier" optional="yes" description="The location at which to insert the object.">
                <cocoa key="Location"/>
            </parameter>
            <!-- parameter name="with data" code="data" type="any" optional="yes" description="The initial contents of the object.">
                <cocoa key="ObjectData"/>
            </parameter>
            <parameter name="with properties" code="prdt" type="record" optional="yes" description="The initial values for properties of the object.">
                <cocoa key="KeyDictionary"/>
            </parameter -->
            <result type="specifier" description="The new object."/>
        </command>

        <command name="move" code="coremove" description="Move an object to a new location.">
            <cocoa class="NSMoveCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The object(s) to move."/>
            <parameter name="to" code="insh" type="location specifier" description="The new location for the object(s).">
                <cocoa key="ToLocation"/>
            </parameter>
        </command>

        <class name="application" code="capp" description="The application's top-level scripting object.">
            <cocoa class="NSApplication"/>
            <property name="name" code="pnam" type="text" access="r" description="The name of the application."/>
            <property name="frontmost" code="pisf" type="boolean" access="r" description="Is this the active application?">
                <cocoa key="isActive"/>
            </property>
            <property name="version" code="vers" type="text" access="r" description="The version number of the application."/>
            <element type="document">
                <cocoa key="orderedDocuments"/>
            </element>
            <element type="window" access="r">
                <cocoa key="orderedWindows"/>
            </element>
            <responds-to command="open">
                <cocoa method="handleOpenScriptCommand:"/>
            </responds-to>
            <responds-to command="quit">
                <cocoa method="handleQuitScriptCommand:"/>
            </responds-to>
        </class>

        <class name="document" code="docu" description="A document.">
            <cocoa class="NSDocument"/>
            <property name="name" code="pnam" type="text" access="r" description="Its name.">
                <cocoa key="displayName"/>
            </property>
            <property name="modified" code="imod" type="boolean" access="r" description="Has it been modified since the last save?">
                <cocoa key="isDocumentEdited"/>
            </property>
            <property name="file" code="file" type="file" access="r" description="Its location on disk, if it has one.">
                <cocoa key="fileURL"/>
            </property>
            <responds-to command="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
            <responds-to command="save">
                <cocoa method="handleSaveScriptCommand:"/>
            </responds-to>
        </class>

        <class name="window" code="cwin" description="A window.">
            <cocoa class="NSWindow"/>
            <property name="name" code="pnam" type="text" access="r" description="The title of the window.">
                <cocoa key="title"/>
            </property>
            <property name="id" code="ID  " type="integer" access="r" description="The unique identifier of the window.">
                <cocoa key="uniqueID"/>
            </property>
            <property name="index" code="pidx" type="integer" description="The index of the window, ordered front to back.">
                <cocoa key="orderedIndex"/>
            </property>
            <property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
                <cocoa key="boundsAsQDRect"/>
            </property>
            <property name="closeable" code="hclb" type="boolean" access="r" description="Does the window have a close button?">
                <cocoa key="hasCloseBox"/>
            </property>
            <property name="miniaturizable" code="ismn" type="boolean" access="r" description="Does the window have a minimize button?">
                <cocoa key="isMiniaturizable"/>
            </property>
            <property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
                <cocoa key="isMiniaturized"/>
            </property>
            <property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
                <cocoa key="isResizable"/>
            </property>
            <property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
                <cocoa key="isVisible"/>
            </property>
            <property name="zoomable" code="iszm" type="boolean" access="r" description="Does the window have a zoom button?">
                <cocoa key="isZoomable"/>
            </property>
            <property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
                <cocoa key="isZoomed"/>
            </property>
            <property name="document" code="docu" type="document" access="r" description="The document whose contents are displayed in the window."/>
            <responds-to command="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
            <responds-to command="save">
                <cocoa method="handleSaveScriptCommand:"/>
            </responds-to>
        </class>

    </suite>

    <suite name="Reveal Suite" code="Revl" description="Commands and classes for Reveal">

        <enumeration name="refreshTime" code="RefT">
            <cocoa name="RefreshTime"/>
            <enumerator name="available" code="RTAv" description="Refresh when the service is available.">
                <cocoa name="Available"/>
            </enumerator>
            <enumerator name="now" code="RTNw" description="Refresh immediately.">
                <cocoa name="Now"/>
            </enumerator>
        </enumeration>

        <command name="refresh" code="RevlRefr" description="Refresh the document or inspect an application in a matching or new document if it's not specified.">
            <cocoa class="IBARefreshScriptCommand"/>
            <direct-parameter type="document" optional="yes" description="The document to refresh." />
            <parameter name="device name" code="rDNm" type="text" optional="yes" description="The device name.">
                <cocoa key="DeviceName"/>
            </parameter>
            <parameter name="name" code="aNam" type="text" optional="yes" description="The application name.">
                <cocoa key="ApplicationName"/>
            </parameter>
            <parameter name="bundle identifier" code="aBId" type="text" optional="yes" description="The application main bundle identifier.">
                <cocoa key="ApplicationBundleIdentifier"/>
            </parameter>
            <parameter name="when" code="rTim" type="refreshTime" optional="yes" description="When to refresh (default now).">
                <cocoa key="When"/>
            </parameter>
        </command>

        <class name="device" plural="devices" code="RDvc" description="Information about devices associated with inspectable applications.">
            <cocoa class="IBARevealDeviceInformation"/>
            <property name="system version" code="sVer" type="text" access="r" description="The device's system version, e.g. '6.1'">
                <cocoa key="systemVersion"/>
            </property>
            <property name="system name" code="sNam" type="text" access="r" description="The device's system name, e.g. 'iPhone OS'">
                <cocoa key="systemName"/>
            </property>
            <property name="name" code="pnam" type="text" access="r" description="The device's name, e.g. 'iPhone Simulator'">
                <cocoa key="name"/>
            </property>
            <property name="display name" code="diNm" type="text" access="r" description="The device's display name.">
                <cocoa key="displayName"/>
            </property>
            <property name="simulator" code="iSim" type="boolean" access="r" description="A value indicating whether the device is an iOS/tvOS Simulator.">
                <cocoa key="simulator"/>
            </property>
        </class>

        <value-type name="url" code="cURL">
            <cocoa class="NSURL"/>
        </value-type>

        <class name="inspectable application" plural="inspectable applications" code="RSvc" description="Reveal inspectable application.">
            <cocoa class="IBARevealInspectableApplication"/>
            <property name="name" code="pnam" type="text" access="r" description="The application's name, e.g. 'My App'">
                <cocoa key="name"/>
            </property>
            <property name="bundle identifier" code="aBId" type="text" access="r" description="The application's bundle identifier, e.g. 'com.example.MyApp'">
                <cocoa key="bundleIdentifier"/>
            </property>
            <property name="connection url" code="aCxU" type="url" access="r" description="The URL used to connect to this application, e.g. 'http://somedevice.local.:45607'">
                <cocoa key="connectionURL"/>
            </property>
            <property name="display name" code="diNm" type="text" access="r" description="The application's display name, e.g. 'My App on iPhoneZog 8.4'">
                <cocoa key="displayName"/>
            </property>
            <property name="device information" code="RDvi" type="device" access="r" description="Information about the application's hosting device.">
                <cocoa key="deviceInformation"/>
            </property>
        </class>

        <class-extension extends="application" description="The Reveal application top-level scripting object.">
            <element type="inspectable application" access="r">
                <cocoa key="orderedInspectableApplications"/>
            </element>
        </class-extension>

        <class-extension extends="document" description="A Reveal document.">
            <cocoa class="IBARevealDocument"/>
            <property name="inspected application" code="SSrv" description="The selected inspectable application">
                <cocoa key="inspectableApplication"/>
                <type type="inspectable application"/>
                <type type="missing value"/>
            </property>
            <property name="connected" code="isCo" type="boolean" access="r" description="True if the document is connected to an application.">
                <cocoa key="isConnected"/>
            </property>
            <property name="refreshing" code="isRe" type="boolean" access="r" description="True if the document is refreshing.">
                <cocoa key="isRefreshing"/>
            </property>
            <property name="loadedFromDisk" code="loDi" type="boolean" access="r" description="True if the document was loaded from disk.">
                <cocoa key="loadedFromDisk"/>
            </property>
            <responds-to command="refresh">
                <cocoa method="handleRefreshScriptCommand:" />
            </responds-to>
        </class-extension>

        <class-extension extends="window" description="A Reveal window.">
            <responds-to command="bring to front">
                <cocoa method="makeKeyAndOrderFront:" />
            </responds-to>
        </class-extension>

    </suite>

</dictionary>
